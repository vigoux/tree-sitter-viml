================================================================================
Simple mapping
================================================================================

map a b

--------------------------------------------------------------------------------

(script_file
  (map_statement
    (map_side)
    (map_side)))

================================================================================
Mapping with multiple items on left and right
================================================================================

map ab cd
nnoremap <leader>v :e $MYVIMRC<CR>

--------------------------------------------------------------------------------

(script_file
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side)))

================================================================================
All map commands
================================================================================

map a b
nmap a b
vmap a b
xmap a b
smap a b
omap a b
imap a b
lmap a b
cmap a b
tmap a b
noremap a b
nnoremap a b
vnoremap a b
xnoremap a b
snoremap a b
onoremap a b
inoremap a b
lnoremap a b
cnoremap a b
tnoremap a b

--------------------------------------------------------------------------------

(script_file
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side)))

================================================================================
Map expression
================================================================================

map <expr> a foobar() + 31

--------------------------------------------------------------------------------

(script_file
  (map_statement
    (map_side)
    (binary_operation
      (call_expression
        (identifier))
      (integer_literal))))

================================================================================
Map options
================================================================================

map <buffer> a b
map <nowait> a b
map <silent> a b
map <script> a b
map <unique> a b

--------------------------------------------------------------------------------

(script_file
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side)))

================================================================================
Map options combined
================================================================================

map <buffer> <unique> a b
map <unique> <buffer> a b

--------------------------------------------------------------------------------

(script_file
  (map_statement
    (map_side)
    (map_side))
  (map_statement
    (map_side)
    (map_side)))

================================================================================
Quoted map expr
================================================================================

map <expr> [a ":\<C-U>" . v:count1 . "prev\<CR>"

--------------------------------------------------------------------------------

(script_file
  (map_statement
    (map_side)
    (binary_operation
      (binary_operation
        (string_literal)
        (scoped_identifier
          (scope)
          (identifier)))
      (string_literal))))
